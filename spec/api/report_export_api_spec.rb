=begin
#ESP Documentation

#The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

OpenAPI spec version: v2_sdk

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for ESP::ReportExportApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReportExportApi' do
  before do
    # run before each test
    @instance = ESP::ReportExportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportExportApi' do
    it 'should create an instact of ReportExportApi' do
      expect(@instance).to be_instance_of(ESP::ReportExportApi)
    end
  end

  # unit tests for request_file
  # Export all alerts for a set of reports to a file
  # &lt;p&gt;An email will be sent to the calling user once the file is ready for download.&lt;/p&gt; &lt;p&gt;The URL and filename attributes will be blank on create. When exporting is complete these attributes will be filled in and can be viewed using the show action.&lt;/p&gt;
  # @param requested_format The file format of the export. Valid values are csv, json, pdf
  # @param report_ids An array of report IDs to export alerts for
  # @param [Hash] opts the optional parameters
  # @option opts [Hash<String, String>] :filter Params used to filter the alerts that will be exported
  # @option opts [String] :include Related objects that can be included in the response:  user See Including Objects for more information.
  # @return [ExportedReport]
  describe 'request_file test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_to_integration
  # Export all alerts on reports to an integration
  # 
  # @param report_ids An array of report IDs
  # @param integration_id The ID of the integration to send the alerts to
  # @param [Hash] opts the optional parameters
  # @option opts [Hash<String, String>] :filter Params used to filter the alerts that will be exported
  # @return [Meta]
  describe 'send_to_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file_details
  # Show a single Exported Report
  # The URL provided is temporary and will expire shortly after the request. To download the exported file you will need to follow the URL provided.
  # @param id Exported Report ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Related objects that can be included in the response:  user See Including Objects for more information.
  # @return [ExportedReport]
  describe 'show_file_details test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
