=begin
#ESP Documentation

#The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

OpenAPI spec version: v2_sdk

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for ESP::ScanIntervalsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ScanIntervalsApi' do
  before do
    # run before each test
    @instance = ESP::ScanIntervalsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ScanIntervalsApi' do
    it 'should create an instact of ScanIntervalsApi' do
      expect(@instance).to be_instance_of(ESP::ScanIntervalsApi)
    end
  end

  # unit tests for create
  # Create a(n) Scan Interval
  # 
  # @param external_account_id The ID of the external account this scan interval is for
  # @param interval The interval, in minutes, this service will be scanned
  # @param service_id The service ID this scan interval is for
  # @param [Hash] opts the optional parameters
  # @return [ScanInterval]
  describe 'create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for destroy
  # Remove a(n) Scan Interval
  # 
  # @param id Scan Interval Id
  # @param [Hash] opts the optional parameters
  # @return [SuccessObject]
  describe 'destroy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Get a list of Scan Intervals
  # 
  # @param external_account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Objects that can be included in the response:  external_account,service  See Including Objects for more information.
  # @option opts [Hash<String, String>] :page Page Number and Page Size.  Example: page: {number: 1, size: 20}
  # @return [PaginatedCollection]
  describe 'list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show
  # Show a single Scan Interval
  # 
  # @param id Scan Interval Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Objects that can be included in the response:  external_account,service  See Including Objects for more information.
  # @return [ScanInterval]
  describe 'show test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a(n) Scan Interval
  # 
  # @param id Scan Interval Id
  # @param external_account_id The ID of the external account this scan interval is for
  # @param interval The interval, in minutes, this service will be scanned
  # @param service_id The service ID this scan interval is for
  # @param [Hash] opts the optional parameters
  # @return [ScanInterval]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
