=begin
#ESP Documentation

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v2

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for ESP::UsersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @instance = ESP::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instact of UsersApi' do
      expect(@instance).to be_instance_of(ESP::UsersApi)
    end
  end

  # unit tests for create
  # Create a(n) User
  # 
  # @param first_name The first name of the user
  # @param last_name The last name of the user
  # @param email The email of the user
  # @param [Hash] opts the optional parameters
  # @option opts [String] :role_id The role of the user
  # @option opts [Array<Integer>] :sub_organization_ids A list of sub organization IDs that the user should have access to
  # @option opts [Array<Integer>] :team_ids A list of team IDs that the user should have access to
  # @option opts [String] :disable_daily_emails Whether the daily emails should be turned off or not. Valid values are true/false
  # @option opts [String] :phone The phone number of the user
  # @option opts [String] :time_zone The time zone of the user. See Time Zones for a list of valid time zones
  # @return [User]
  describe 'create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for destroy
  # Remove a(n) User
  # 
  # @param id User Id
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'destroy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Get a list of Users
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Hash<String, String>] :page Page Number
  # @option opts [Hash<String, String>] :filter Filter Params for Searching
  # @option opts [String] :include Included Objects
  # @return [PaginatedCollection]
  describe 'list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show
  # Show a single User
  # 
  # @param id User Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Included Objects
  # @return [User]
  describe 'show test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a(n) User
  # 
  # @param id User Id
  # @param first_name The first name of the user
  # @param last_name The last name of the user
  # @param email The email of the user
  # @param [Hash] opts the optional parameters
  # @option opts [String] :role_id The role of the user
  # @option opts [Array<Integer>] :sub_organization_ids A list of sub organization IDs that the user should have access to
  # @option opts [Array<Integer>] :team_ids A list of team IDs that the user should have access to
  # @option opts [String] :disable_daily_emails Whether the daily emails should be turned off or not. Valid values are true/false
  # @option opts [String] :phone The phone number of the user
  # @option opts [String] :time_zone The time zone of the user. See Time Zones for a list of valid time zones
  # @return [User]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
