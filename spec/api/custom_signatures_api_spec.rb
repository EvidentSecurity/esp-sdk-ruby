=begin
#ESP Documentation

#The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

OpenAPI spec version: v2_sdk

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for ESP::CustomSignaturesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CustomSignaturesApi' do
  before do
    # run before each test
    @instance = ESP::CustomSignaturesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomSignaturesApi' do
    it 'should create an instance of CustomSignaturesApi' do
      expect(@instance).to be_instance_of(ESP::CustomSignaturesApi)
    end
  end

  # unit tests for create
  # Create a(n) Custom Signature
  # 
  # @param external_account_ids The external account IDs this custom signature should run for. If no accounts are selected the custom signature will not be run.
  # @param identifier The identifier to use for the custom signature. Common format is AWS:- such as AWS:IAM-001
  # @param name The name of the custom signature
  # @param risk_level The risk-level of the problem identified by the custom signature. Valid values are low, medium, high
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions, suppressions See Including Objects for more information.
  # @option opts [String] :description The description of the custom signature that is displayed on alerts
  # @option opts [String] :resolution Details for how to resolve this custom signature that is displayed on alerts
  # @return [CustomSignature]
  describe 'create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Delete a(n) Custom Signature
  # 
  # @param id Custom Signature ID
  # @param [Hash] opts the optional parameters
  # @return [Meta]
  describe 'delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Get a list of Custom Signatures
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions, suppressions See Including Objects for more information.
  # @option opts [Hash<String, String>] :filter Filter Params for Searching.  Equality Searchable Attributes: [id, risk_level, service_id, name, identifier] Matching Searchable Attributes: [name, identifier]  Sortable Attributes: [name, updated_at, created_at, id] Searchable Associations: [organization, teams, definitions, integrations, suppressions] See Searching Lists for more information. See the filter parameter of the association&#39;s list action to see what attributes are searchable on each association. See Conditions on Relationships in Searching Lists for more information.
  # @option opts [String] :page Page Number and Page Size.  Number is the page number of the collection to return, size is the number of items to return per page.
  # @return [PaginatedCollection]
  describe 'list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show
  # Show a single Custom Signature
  # 
  # @param id Custom Signature ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions, suppressions See Including Objects for more information.
  # @return [CustomSignature]
  describe 'show test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a(n) Custom Signature
  # 
  # @param id Custom Signature ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions, suppressions See Including Objects for more information.
  # @option opts [String] :description The description of the custom signature that is displayed on alerts
  # @option opts [Array<Integer>] :external_account_ids The external account IDs this custom signature should run for. If no accounts are selected the custom signature will not be run.
  # @option opts [String] :identifier The identifier to use for the custom signature. Common format is AWS:- such as AWS:IAM-001
  # @option opts [String] :name The name of the custom signature
  # @option opts [String] :resolution Details for how to resolve this custom signature that is displayed on alerts
  # @option opts [String] :risk_level The risk-level of the problem identified by the custom signature. Valid values are low, medium, high
  # @return [CustomSignature]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
