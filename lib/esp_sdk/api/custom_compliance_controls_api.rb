=begin
#ESP Documentation

#The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

OpenAPI spec version: v2_sdk

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module ESP
  class CustomComplianceControlsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Add a Custom Signature to a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this custom signature belongs to
    # @param custom_signature_id The ID of the custom signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions See Including Objects for more information.
    # @return [CustomSignature]
    def add_custom_signature(custom_compliance_control_id, custom_signature_id, opts = {})
      data, _status_code, _headers = add_custom_signature_with_http_info(custom_compliance_control_id, custom_signature_id, opts)
      return data
    end

    # Add a Custom Signature to a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this custom signature belongs to
    # @param custom_signature_id The ID of the custom signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions See Including Objects for more information.
    # @return [Array<(CustomSignature, Fixnum, Hash)>] CustomSignature data, response status code and response headers
    def add_custom_signature_with_http_info(custom_compliance_control_id, custom_signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.add_custom_signature ..."
      end
      # verify the required parameter 'custom_compliance_control_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_control_id' when calling CustomComplianceControlsApi.add_custom_signature" if custom_compliance_control_id.nil?
      # verify the required parameter 'custom_signature_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_signature_id' when calling CustomComplianceControlsApi.add_custom_signature" if custom_signature_id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{custom_compliance_control_id}/custom_signatures.json_api".sub('{format}','json_api').sub('{' + 'custom_compliance_control_id' + '}', custom_compliance_control_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["custom_signature_id"] = custom_signature_id

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomSignature')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#add_custom_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add a Signature to a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this signature belongs to
    # @param signature_id The ID of the signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  service See Including Objects for more information.
    # @return [Signature]
    def add_signature(custom_compliance_control_id, signature_id, opts = {})
      data, _status_code, _headers = add_signature_with_http_info(custom_compliance_control_id, signature_id, opts)
      return data
    end

    # Add a Signature to a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this signature belongs to
    # @param signature_id The ID of the signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  service See Including Objects for more information.
    # @return [Array<(Signature, Fixnum, Hash)>] Signature data, response status code and response headers
    def add_signature_with_http_info(custom_compliance_control_id, signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.add_signature ..."
      end
      # verify the required parameter 'custom_compliance_control_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_control_id' when calling CustomComplianceControlsApi.add_signature" if custom_compliance_control_id.nil?
      # verify the required parameter 'signature_id' is set
      fail ArgumentError, "Missing the required parameter 'signature_id' when calling CustomComplianceControlsApi.add_signature" if signature_id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{custom_compliance_control_id}/signatures.json_api".sub('{format}','json_api').sub('{' + 'custom_compliance_control_id' + '}', custom_compliance_control_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["signature_id"] = signature_id

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Signature')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#add_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a(n) Custom Compliance Control
    # 
    # @param identifier The identifier of this custom control
    # @param custom_compliance_domain_id The ID of the Custom Compliance Domain this custom control belongs to
    # @param name Name
    # @param [Hash] opts the optional parameters
    # @option opts [String] :description The description for this custom control
    # @option opts [Integer] :position The position of this custom control within the custom domain
    # @option opts [Array<Integer>] :signature_ids An array of signatures identified by signature_id that belong to this custom control
    # @option opts [Array<Integer>] :custom_signature_ids An array of custom signatures identified by custom_signature_id that belong to this custom control
    # @option opts [String] :include Related objects that can be included in the response:  custom_compliance_standard, custom_compliance_domain, signatures, custom_signatures See Including Objects for more information.
    # @return [CustomComplianceControl]
    def create(identifier, custom_compliance_domain_id, name, opts = {})
      data, _status_code, _headers = create_with_http_info(identifier, custom_compliance_domain_id, name, opts)
      return data
    end

    # Create a(n) Custom Compliance Control
    # 
    # @param identifier The identifier of this custom control
    # @param custom_compliance_domain_id The ID of the Custom Compliance Domain this custom control belongs to
    # @param name Name
    # @param [Hash] opts the optional parameters
    # @option opts [String] :description The description for this custom control
    # @option opts [Integer] :position The position of this custom control within the custom domain
    # @option opts [Array<Integer>] :signature_ids An array of signatures identified by signature_id that belong to this custom control
    # @option opts [Array<Integer>] :custom_signature_ids An array of custom signatures identified by custom_signature_id that belong to this custom control
    # @option opts [String] :include Related objects that can be included in the response:  custom_compliance_standard, custom_compliance_domain, signatures, custom_signatures See Including Objects for more information.
    # @return [Array<(CustomComplianceControl, Fixnum, Hash)>] CustomComplianceControl data, response status code and response headers
    def create_with_http_info(identifier, custom_compliance_domain_id, name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.create ..."
      end
      # verify the required parameter 'identifier' is set
      fail ArgumentError, "Missing the required parameter 'identifier' when calling CustomComplianceControlsApi.create" if identifier.nil?
      # verify the required parameter 'custom_compliance_domain_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_domain_id' when calling CustomComplianceControlsApi.create" if custom_compliance_domain_id.nil?
      # verify the required parameter 'name' is set
      fail ArgumentError, "Missing the required parameter 'name' when calling CustomComplianceControlsApi.create" if name.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls.json_api".sub('{format}','json_api')

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["identifier"] = identifier
      form_params["custom_compliance_domain_id"] = custom_compliance_domain_id
      form_params["name"] = name
      form_params["description"] = opts[:'description'] if !opts[:'description'].nil?
      form_params["position"] = opts[:'position'] if !opts[:'position'].nil?
      form_params["signature_ids"] = @api_client.build_collection_param(opts[:'signature_ids'], :multi) if !opts[:'signature_ids'].nil?
      form_params["custom_signature_ids"] = @api_client.build_collection_param(opts[:'custom_signature_ids'], :multi) if !opts[:'custom_signature_ids'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomComplianceControl')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a(n) Custom Compliance Control
    # 
    # @param id  ID
    # @param [Hash] opts the optional parameters
    # @return [Meta]
    def delete(id, opts = {})
      data, _status_code, _headers = delete_with_http_info(id, opts)
      return data
    end

    # Delete a(n) Custom Compliance Control
    # 
    # @param id  ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Meta, Fixnum, Hash)>] Meta data, response status code and response headers
    def delete_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.delete ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling CustomComplianceControlsApi.delete" if id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{id}.json_api".sub('{format}','json_api').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Meta')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a list of Custom Signatures for a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this custom signature belongs to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page Page Number and Page Size.  number is the page number of the collection to return, size is the number of items to return per page (default to {:number=>1,+:size=>20})
    # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions See Including Objects for more information.
    # @return [PaginatedCollection]
    def list_custom_signatures(custom_compliance_control_id, opts = {})
      data, _status_code, _headers = list_custom_signatures_with_http_info(custom_compliance_control_id, opts)
      return data
    end

    # Get a list of Custom Signatures for a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this custom signature belongs to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page Page Number and Page Size.  number is the page number of the collection to return, size is the number of items to return per page
    # @option opts [String] :include Related objects that can be included in the response:  organization, teams, external_accounts, definitions See Including Objects for more information.
    # @return [Array<(PaginatedCollection, Fixnum, Hash)>] PaginatedCollection data, response status code and response headers
    def list_custom_signatures_with_http_info(custom_compliance_control_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.list_custom_signatures ..."
      end
      # verify the required parameter 'custom_compliance_control_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_control_id' when calling CustomComplianceControlsApi.list_custom_signatures" if custom_compliance_control_id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{custom_compliance_control_id}/custom_signatures.json_api".sub('{format}','json_api').sub('{' + 'custom_compliance_control_id' + '}', custom_compliance_control_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["page"] = opts[:'page'] if !opts[:'page'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PaginatedCollection')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#list_custom_signatures\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a list of Signatures for a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this signature belongs to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page Page Number and Page Size.  number is the page number of the collection to return, size is the number of items to return per page (default to {:number=>1,+:size=>20})
    # @option opts [String] :include Related objects that can be included in the response:  service See Including Objects for more information.
    # @return [PaginatedCollection]
    def list_signatures(custom_compliance_control_id, opts = {})
      data, _status_code, _headers = list_signatures_with_http_info(custom_compliance_control_id, opts)
      return data
    end

    # Get a list of Signatures for a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this signature belongs to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page Page Number and Page Size.  number is the page number of the collection to return, size is the number of items to return per page
    # @option opts [String] :include Related objects that can be included in the response:  service See Including Objects for more information.
    # @return [Array<(PaginatedCollection, Fixnum, Hash)>] PaginatedCollection data, response status code and response headers
    def list_signatures_with_http_info(custom_compliance_control_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.list_signatures ..."
      end
      # verify the required parameter 'custom_compliance_control_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_control_id' when calling CustomComplianceControlsApi.list_signatures" if custom_compliance_control_id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{custom_compliance_control_id}/signatures.json_api".sub('{format}','json_api').sub('{' + 'custom_compliance_control_id' + '}', custom_compliance_control_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["page"] = opts[:'page'] if !opts[:'page'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PaginatedCollection')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#list_signatures\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Remove a Custom Signature from a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this custom signature belongs to
    # @param custom_signature_id The ID of the custom signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @return [Meta]
    def remove_custom_signature(custom_compliance_control_id, custom_signature_id, opts = {})
      data, _status_code, _headers = remove_custom_signature_with_http_info(custom_compliance_control_id, custom_signature_id, opts)
      return data
    end

    # Remove a Custom Signature from a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this custom signature belongs to
    # @param custom_signature_id The ID of the custom signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @return [Array<(Meta, Fixnum, Hash)>] Meta data, response status code and response headers
    def remove_custom_signature_with_http_info(custom_compliance_control_id, custom_signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.remove_custom_signature ..."
      end
      # verify the required parameter 'custom_compliance_control_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_control_id' when calling CustomComplianceControlsApi.remove_custom_signature" if custom_compliance_control_id.nil?
      # verify the required parameter 'custom_signature_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_signature_id' when calling CustomComplianceControlsApi.remove_custom_signature" if custom_signature_id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{custom_compliance_control_id}/custom_signatures/{custom_signature_id}.json_api".sub('{format}','json_api').sub('{' + 'custom_compliance_control_id' + '}', custom_compliance_control_id.to_s).sub('{' + 'custom_signature_id' + '}', custom_signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Meta')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#remove_custom_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Remove a Signature from a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this signature belongs to
    # @param signature_id The ID of the signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @return [Meta]
    def remove_signature(custom_compliance_control_id, signature_id, opts = {})
      data, _status_code, _headers = remove_signature_with_http_info(custom_compliance_control_id, signature_id, opts)
      return data
    end

    # Remove a Signature from a Custom Compliance Control
    # 
    # @param custom_compliance_control_id The ID of the Custom Compliance Control this signature belongs to
    # @param signature_id The ID of the signature that belongs to this custom control
    # @param [Hash] opts the optional parameters
    # @return [Array<(Meta, Fixnum, Hash)>] Meta data, response status code and response headers
    def remove_signature_with_http_info(custom_compliance_control_id, signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.remove_signature ..."
      end
      # verify the required parameter 'custom_compliance_control_id' is set
      fail ArgumentError, "Missing the required parameter 'custom_compliance_control_id' when calling CustomComplianceControlsApi.remove_signature" if custom_compliance_control_id.nil?
      # verify the required parameter 'signature_id' is set
      fail ArgumentError, "Missing the required parameter 'signature_id' when calling CustomComplianceControlsApi.remove_signature" if signature_id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{custom_compliance_control_id}/signatures/{signature_id}.json_api".sub('{format}','json_api').sub('{' + 'custom_compliance_control_id' + '}', custom_compliance_control_id.to_s).sub('{' + 'signature_id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Meta')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#remove_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Show a single Custom Compliance Control
    # 
    # @param id Custom Compliance Control ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  custom_compliance_standard, custom_compliance_domain, signatures, custom_signatures See Including Objects for more information.
    # @return [CustomComplianceControl]
    def show(id, opts = {})
      data, _status_code, _headers = show_with_http_info(id, opts)
      return data
    end

    # Show a single Custom Compliance Control
    # 
    # @param id Custom Compliance Control ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  custom_compliance_standard, custom_compliance_domain, signatures, custom_signatures See Including Objects for more information.
    # @return [Array<(CustomComplianceControl, Fixnum, Hash)>] CustomComplianceControl data, response status code and response headers
    def show_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.show ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling CustomComplianceControlsApi.show" if id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{id}.json_api".sub('{format}','json_api').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomComplianceControl')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#show\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a(n) Custom Compliance Control
    # 
    # @param id Custom Compliance Control ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :identifier The identifier of this custom control
    # @option opts [Integer] :custom_compliance_domain_id The ID of the Custom Compliance Domain this custom control belongs to
    # @option opts [String] :description The description for this custom control
    # @option opts [String] :name Name
    # @option opts [Integer] :position The position of this custom control within the custom domain
    # @option opts [Array<Integer>] :signature_ids An array of signatures identified by signature_id that belong to this custom control
    # @option opts [Array<Integer>] :custom_signature_ids An array of custom signatures identified by custom_signature_id that belong to this custom control
    # @option opts [String] :include Related objects that can be included in the response:  custom_compliance_standard, custom_compliance_domain, signatures, custom_signatures See Including Objects for more information.
    # @return [CustomComplianceControl]
    def update(id, opts = {})
      data, _status_code, _headers = update_with_http_info(id, opts)
      return data
    end

    # Update a(n) Custom Compliance Control
    # 
    # @param id Custom Compliance Control ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :identifier The identifier of this custom control
    # @option opts [Integer] :custom_compliance_domain_id The ID of the Custom Compliance Domain this custom control belongs to
    # @option opts [String] :description The description for this custom control
    # @option opts [String] :name Name
    # @option opts [Integer] :position The position of this custom control within the custom domain
    # @option opts [Array<Integer>] :signature_ids An array of signatures identified by signature_id that belong to this custom control
    # @option opts [Array<Integer>] :custom_signature_ids An array of custom signatures identified by custom_signature_id that belong to this custom control
    # @option opts [String] :include Related objects that can be included in the response:  custom_compliance_standard, custom_compliance_domain, signatures, custom_signatures See Including Objects for more information.
    # @return [Array<(CustomComplianceControl, Fixnum, Hash)>] CustomComplianceControl data, response status code and response headers
    def update_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CustomComplianceControlsApi.update ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling CustomComplianceControlsApi.update" if id.nil?
      # resource path
      local_var_path = "/api/v2/custom_compliance_controls/{id}.json_api".sub('{format}','json_api').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["identifier"] = opts[:'identifier'] if !opts[:'identifier'].nil?
      form_params["custom_compliance_domain_id"] = opts[:'custom_compliance_domain_id'] if !opts[:'custom_compliance_domain_id'].nil?
      form_params["description"] = opts[:'description'] if !opts[:'description'].nil?
      form_params["name"] = opts[:'name'] if !opts[:'name'].nil?
      form_params["position"] = opts[:'position'] if !opts[:'position'].nil?
      form_params["signature_ids"] = @api_client.build_collection_param(opts[:'signature_ids'], :multi) if !opts[:'signature_ids'].nil?
      form_params["custom_signature_ids"] = @api_client.build_collection_param(opts[:'custom_signature_ids'], :multi) if !opts[:'custom_signature_ids'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomComplianceControl')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomComplianceControlsApi#update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
