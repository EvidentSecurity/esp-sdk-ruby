=begin
#ESP Documentation

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v2

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module ESP
  class SignatureSuppressionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # A successful call to this API creates a new signature suppression for the supplied signature_ids or custom_signature_ids. The body of the request must contain a json API compliant hash of attributes with type suppression/signatures.
    # 
    # @param regions An array of region names to suppress
    # @param external_account_ids An Array of the external accounts identified by external_account_id to suppress the signature or custom signature on
    # @param reason The reason for creating the suppression
    # @param resource The resource string this suppression will suppress alerts for
    # @param [Hash] opts the optional parameters
    # @option opts [Array<Integer>] :signature_ids An array of signatures identified by signature_id to suppress. Required if custom_signature_ids is blank
    # @option opts [Array<Integer>] :custom_signature_ids An array of custom signatures identified by custom_signature_id to suppress. Required if signature_ids is blank
    # @return [nil]
    def create_signature_suppression(regions, external_account_ids, reason, resource, opts = {})
      create_signature_suppression_with_http_info(regions, external_account_ids, reason, resource, opts)
      return nil
    end

    # A successful call to this API creates a new signature suppression for the supplied signature_ids or custom_signature_ids. The body of the request must contain a json API compliant hash of attributes with type suppression/signatures.
    # 
    # @param regions An array of region names to suppress
    # @param external_account_ids An Array of the external accounts identified by external_account_id to suppress the signature or custom signature on
    # @param reason The reason for creating the suppression
    # @param resource The resource string this suppression will suppress alerts for
    # @param [Hash] opts the optional parameters
    # @option opts [Array<Integer>] :signature_ids An array of signatures identified by signature_id to suppress. Required if custom_signature_ids is blank
    # @option opts [Array<Integer>] :custom_signature_ids An array of custom signatures identified by custom_signature_id to suppress. Required if signature_ids is blank
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_signature_suppression_with_http_info(regions, external_account_ids, reason, resource, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SignatureSuppressionsApi.create_signature_suppression ..."
      end
      # verify the required parameter 'regions' is set
      fail ArgumentError, "Missing the required parameter 'regions' when calling SignatureSuppressionsApi.create_signature_suppression" if regions.nil?
      # verify the required parameter 'external_account_ids' is set
      fail ArgumentError, "Missing the required parameter 'external_account_ids' when calling SignatureSuppressionsApi.create_signature_suppression" if external_account_ids.nil?
      # verify the required parameter 'reason' is set
      fail ArgumentError, "Missing the required parameter 'reason' when calling SignatureSuppressionsApi.create_signature_suppression" if reason.nil?
      # verify the required parameter 'resource' is set
      fail ArgumentError, "Missing the required parameter 'resource' when calling SignatureSuppressionsApi.create_signature_suppression" if resource.nil?
      # resource path
      local_var_path = "/api/v2/suppressions/signatures.json_api".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}
      form_params["regions"] = @api_client.build_collection_param(regions, :csv)
      form_params["external_account_ids"] = @api_client.build_collection_param(external_account_ids, :csv)
      form_params["reason"] = reason
      form_params["resource"] = resource
      form_params["signature_ids"] = @api_client.build_collection_param(opts[:'signature_ids'], :csv) if !opts[:'signature_ids'].nil?
      form_params["custom_signature_ids"] = @api_client.build_collection_param(opts[:'custom_signature_ids'], :csv) if !opts[:'custom_signature_ids'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SignatureSuppressionsApi#create_signature_suppression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
