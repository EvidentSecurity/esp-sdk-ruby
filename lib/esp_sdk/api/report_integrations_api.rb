=begin
#ESP Documentation

#The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

OpenAPI spec version: v2_sdk

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module ESP
  class ReportIntegrationsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Export all alerts on reports to an integration
    # 
    # @param report_ids An array of report IDs
    # @param integration_id The ID of the integration to send the alerts to
    # @param [Hash] opts the optional parameters
    # @return [SuccessObject]
    def create(report_ids, integration_id, opts = {})
      data, _status_code, _headers = create_with_http_info(report_ids, integration_id, opts)
      return data
    end

    # Export all alerts on reports to an integration
    # 
    # @param report_ids An array of report IDs
    # @param integration_id The ID of the integration to send the alerts to
    # @param [Hash] opts the optional parameters
    # @return [Array<(SuccessObject, Fixnum, Hash)>] SuccessObject data, response status code and response headers
    def create_with_http_info(report_ids, integration_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReportIntegrationsApi.create ..."
      end
      # verify the required parameter 'report_ids' is set
      fail ArgumentError, "Missing the required parameter 'report_ids' when calling ReportIntegrationsApi.create" if report_ids.nil?
      # verify the required parameter 'integration_id' is set
      fail ArgumentError, "Missing the required parameter 'integration_id' when calling ReportIntegrationsApi.create" if integration_id.nil?
      # resource path
      local_var_path = "/api/v2/reports/export/integrations.json_api".sub('{format}','json_api')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["report_ids"] = @api_client.build_collection_param(report_ids, :csv)
      form_params["integration_id"] = integration_id

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SuccessObject')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReportIntegrationsApi#create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
