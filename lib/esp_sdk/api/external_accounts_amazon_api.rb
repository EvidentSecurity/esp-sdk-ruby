=begin
#ESP Documentation

#The Evident Security Platform API (version 2.0) is designed to allow users granular control over their Amazon Web Service security experience by allowing them to review alerts, monitor signatures, and create custom signatures.

OpenAPI spec version: v2_sdk

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module ESP
  class ExternalAccountsAmazonApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Create an Amazon External Account
    #  The related external_account object will be returned with the response.
    # @param arn Amazon Resource Name for the IAM role
    # @param external_id External Identifier set on the role
    # @param name Name
    # @param team_id The ID of the team the external account belongs to
    # @param [Hash] opts the optional parameters
    # @return [ExternalAccountAmazonIam]
    def create(arn, external_id, name, team_id, opts = {})
      data, _status_code, _headers = create_with_http_info(arn, external_id, name, team_id, opts)
      return data
    end

    # Create an Amazon External Account
    #  The related external_account object will be returned with the response.
    # @param arn Amazon Resource Name for the IAM role
    # @param external_id External Identifier set on the role
    # @param name Name
    # @param team_id The ID of the team the external account belongs to
    # @param [Hash] opts the optional parameters
    # @return [Array<(ExternalAccountAmazonIam, Fixnum, Hash)>] ExternalAccountAmazonIam data, response status code and response headers
    def create_with_http_info(arn, external_id, name, team_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExternalAccountsAmazonApi.create ..."
      end
      # verify the required parameter 'arn' is set
      fail ArgumentError, "Missing the required parameter 'arn' when calling ExternalAccountsAmazonApi.create" if arn.nil?
      # verify the required parameter 'external_id' is set
      fail ArgumentError, "Missing the required parameter 'external_id' when calling ExternalAccountsAmazonApi.create" if external_id.nil?
      # verify the required parameter 'name' is set
      fail ArgumentError, "Missing the required parameter 'name' when calling ExternalAccountsAmazonApi.create" if name.nil?
      # verify the required parameter 'team_id' is set
      fail ArgumentError, "Missing the required parameter 'team_id' when calling ExternalAccountsAmazonApi.create" if team_id.nil?
      # resource path
      local_var_path = "/api/v2/external_accounts/amazon.json_api".sub('{format}','json_api')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["arn"] = arn
      form_params["external_id"] = external_id
      form_params["name"] = name
      form_params["team_id"] = team_id

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExternalAccountAmazonIam')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExternalAccountsAmazonApi#create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Show an Amazon External Account
    # 
    # @param external_account_id The ID of the external account to show an Amazon IAM credential for
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  external_account See Including Objects for more information.
    # @return [ExternalAccountAmazonIam]
    def show(external_account_id, opts = {})
      data, _status_code, _headers = show_with_http_info(external_account_id, opts)
      return data
    end

    # Show an Amazon External Account
    # 
    # @param external_account_id The ID of the external account to show an Amazon IAM credential for
    # @param [Hash] opts the optional parameters
    # @option opts [String] :include Related objects that can be included in the response:  external_account See Including Objects for more information.
    # @return [Array<(ExternalAccountAmazonIam, Fixnum, Hash)>] ExternalAccountAmazonIam data, response status code and response headers
    def show_with_http_info(external_account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExternalAccountsAmazonApi.show ..."
      end
      # verify the required parameter 'external_account_id' is set
      fail ArgumentError, "Missing the required parameter 'external_account_id' when calling ExternalAccountsAmazonApi.show" if external_account_id.nil?
      # resource path
      local_var_path = "/api/v2/external_accounts/{external_account_id}/amazon.json_api".sub('{format}','json_api').sub('{' + 'external_account_id' + '}', external_account_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExternalAccountAmazonIam')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExternalAccountsAmazonApi#show\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update an Amazon External Account
    #  The related external_account object will be returned with the response.
    # @param external_account_id The ID of the external account to update an Amazon IAM credential of
    # @param [Hash] opts the optional parameters
    # @option opts [String] :arn Amazon Resource Name for the IAM role
    # @option opts [String] :external_id External Identifier set on the role
    # @option opts [String] :name Name
    # @option opts [Integer] :team_id The ID of the team the external account belongs to
    # @return [ExternalAccountAmazonIam]
    def update(external_account_id, opts = {})
      data, _status_code, _headers = update_with_http_info(external_account_id, opts)
      return data
    end

    # Update an Amazon External Account
    #  The related external_account object will be returned with the response.
    # @param external_account_id The ID of the external account to update an Amazon IAM credential of
    # @param [Hash] opts the optional parameters
    # @option opts [String] :arn Amazon Resource Name for the IAM role
    # @option opts [String] :external_id External Identifier set on the role
    # @option opts [String] :name Name
    # @option opts [Integer] :team_id The ID of the team the external account belongs to
    # @return [Array<(ExternalAccountAmazonIam, Fixnum, Hash)>] ExternalAccountAmazonIam data, response status code and response headers
    def update_with_http_info(external_account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExternalAccountsAmazonApi.update ..."
      end
      # verify the required parameter 'external_account_id' is set
      fail ArgumentError, "Missing the required parameter 'external_account_id' when calling ExternalAccountsAmazonApi.update" if external_account_id.nil?
      # resource path
      local_var_path = "/api/v2/external_accounts/{external_account_id}/amazon.json_api".sub('{format}','json_api').sub('{' + 'external_account_id' + '}', external_account_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/vnd.api+json'])

      # form parameters
      form_params = {}
      form_params["arn"] = opts[:'arn'] if !opts[:'arn'].nil?
      form_params["external_id"] = opts[:'external_id'] if !opts[:'external_id'].nil?
      form_params["name"] = opts[:'name'] if !opts[:'name'].nil?
      form_params["team_id"] = opts[:'team_id'] if !opts[:'team_id'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExternalAccountAmazonIam')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExternalAccountsAmazonApi#update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
